{"uid":"9741ce3582ab9452","name":"test_valid_promo_whitespace_input","fullName":"tests.pytest.test_mars_air#test_valid_promo_whitespace_input","historyId":"77ac4b42bad274ac78ab07c5bf70f586","time":{"start":1709811189548,"stop":1709811190618,"duration":1070},"status":"failed","statusMessage":"AssertionError: expected is \"Call now on 0800 MARSAIR to book!\", but actual is \"Sorry, code   is not valid\"\nassert 'Sorry, code   is not valid' == 'Call now on ...SAIR to book!'\n  \n  - Call now on 0800 MARSAIR to book!\n  + Sorry, code   is not valid","statusTrace":"request = <FixtureRequest for <Function test_valid_promo_whitespace_input>>\nseat_available = ['departing=0', 'returning=5']\n\n    def test_valid_promo_whitespace_input(request, seat_available):\n>       execute(data=['promotional_code=  '],\n                expected=['Seats available!', 'Call now on 0800 MARSAIR to book!', 'Back'],\n                precondition=seat_available,\n                request=request)\n\ntests\\pytest\\test_mars_air.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata = ['promotional_code=  ', 'departing=0', 'returning=5']\nexpected = ['Seats available!', 'Call now on 0800 MARSAIR to book!', 'Back']\nprecondition = ['departing=0', 'returning=5']\nrequest = <FixtureRequest for <Function test_valid_promo_whitespace_input>>\n\n    def execute(data: list, expected: list, precondition=None, request=None):\n        # act\n        session, url = request.getfixturevalue('session')\n        if precondition:\n            data.extend(precondition)\n        response = session.post(url, data='&'.join([v for v in data]))\n        soup = BeautifulSoup(response.text, features='html.parser')\n        # assert\n        assert 200 == response.status_code\n        actual_lst = soup.find('div', {'id': 'content'}).find_all('p')\n        for i, actual in enumerate(actual_lst):\n            exp, act = expected[i], actual.get_text().strip()\n>           assert act == exp, f'expected is \"{exp}\", but actual is \"{act}\"'\nE           AssertionError: expected is \"Call now on 0800 MARSAIR to book!\", but actual is \"Sorry, code   is not valid\"\nE           assert 'Sorry, code   is not valid' == 'Call now on ...SAIR to book!'\nE             \nE             - Call now on 0800 MARSAIR to book!\nE             + Sorry, code   is not valid\n\ntests\\pytest\\test_mars_air.py:27: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1709811187234,"stop":1709811187234,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"session","time":{"start":1709811187234,"stop":1709811187235,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1709811187234,"stop":1709811187234,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1709811187234,"stop":1709811187234,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"base_url","time":{"start":1709811187234,"stop":1709811187234,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"seat_available","time":{"start":1709811189547,"stop":1709811189547,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"afterStages":[{"name":"session::0","time":{"start":1709811191248,"stop":1709811191248,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.pytest"},{"name":"suite","value":"test_mars_air"},{"name":"host","value":"DESKTOP-ILHPRQN"},{"name":"thread","value":"17704-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.pytest.test_mars_air"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"9741ce3582ab9452.json","parameterValues":[]}