{"uid":"72ce235d51d25f7","name":"test_invalid_promo_00_percent_discount","fullName":"tests.pytest.test_mars_air#test_invalid_promo_00_percent_discount","historyId":"34db3ca4b499f9c86b0069450108f366","time":{"start":1709825846942,"stop":1709825847443,"duration":501},"status":"failed","statusMessage":"AssertionError: expected is \"Sorry, code XX0-XXX-000 is not valid\", but actual is \"Promotional code XX0-XXX-000 used: 00% discount!\"\nassert 'Promotional ...00% discount!' == 'Sorry, code ... is not valid'\n  \n  - Sorry, code XX0-XXX-000 is not valid\n  + Promotional code XX0-XXX-000 used: 00% discount!","statusTrace":"request = <FixtureRequest for <Function test_invalid_promo_00_percent_discount>>\nseat_available = ['departing=0', 'returning=5']\n\n    def test_invalid_promo_00_percent_discount(request, seat_available):\n>       execute(data=['promotional_code=XX0-XXX-000'],\n                expected=['Seats available!', 'Sorry, code XX0-XXX-000 is not valid',\n                          'Call now on 0800 MARSAIR to book!', 'Back'],\n                precondition=seat_available,\n                request=request)\n\ntests\\pytest\\test_mars_air.py:82: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata = ['promotional_code=XX0-XXX-000', 'departing=0', 'returning=5']\nexpected = ['Seats available!', 'Sorry, code XX0-XXX-000 is not valid', 'Call now on 0800 MARSAIR to book!', 'Back']\nprecondition = ['departing=0', 'returning=5']\nrequest = <FixtureRequest for <Function test_invalid_promo_00_percent_discount>>\n\n    def execute(data: list, expected: list, precondition=None, request=None):\n        # act\n        session, url = request.getfixturevalue('session')\n        if precondition:\n            data.extend(precondition)\n        response = session.post(url, data='&'.join([v for v in data]))\n        soup = BeautifulSoup(response.text, features='html.parser')\n        # assert\n        assert 200 == response.status_code\n        actual_lst = soup.find('div', {'id': 'content'}).find_all('p')\n        for i, actual in enumerate(actual_lst):\n            exp, act = expected[i], actual.get_text().strip()\n>           assert act == exp, f'expected is \"{exp}\", but actual is \"{act}\"'\nE           AssertionError: expected is \"Sorry, code XX0-XXX-000 is not valid\", but actual is \"Promotional code XX0-XXX-000 used: 00% discount!\"\nE           assert 'Promotional ...00% discount!' == 'Sorry, code ... is not valid'\nE             \nE             - Sorry, code XX0-XXX-000 is not valid\nE             + Promotional code XX0-XXX-000 used: 00% discount!\n\ntests\\pytest\\test_mars_air.py:27: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1709825844949,"stop":1709825844949,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"delete_output_dir","time":{"start":1709825844950,"stop":1709825844950,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"pytestconfig","time":{"start":1709825844950,"stop":1709825844950,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"_verify_url","time":{"start":1709825844950,"stop":1709825844950,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"session","time":{"start":1709825844950,"stop":1709825844951,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"seat_available","time":{"start":1709825844951,"stop":1709825844951,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[{"name":"session::0","time":{"start":1709825848359,"stop":1709825848359,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"tests.pytest"},{"name":"suite","value":"test_mars_air"},{"name":"host","value":"DESKTOP-ILHPRQN"},{"name":"thread","value":"776-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.pytest.test_mars_air"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"72ce235d51d25f7.json","parameterValues":[]}